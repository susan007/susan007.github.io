(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{363:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[a._v("#")]),a._v(" 命名规范")]),a._v(" "),s("h2",{attrs:{id:"目录命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录命名"}},[a._v("#")]),a._v(" 目录命名")]),a._v(" "),s("ul",[s("li",[a._v("项目文件夹：projectname")]),a._v(" "),s("li",[a._v("样式文件夹：css")]),a._v(" "),s("li",[a._v("脚本文件夹：js")]),a._v(" "),s("li",[a._v("样式类图片文件夹：img")])]),a._v(" "),s("h2",{attrs:{id:"图片命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片命名"}},[a._v("#")]),a._v(" 图片命名")]),a._v(" "),s("h3",{attrs:{id:"命名顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名顺序"}},[a._v("#")]),a._v(" 命名顺序")]),a._v(" "),s("ul",[s("li",[a._v("图片命名建议以以下顺序命名：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("图片业务（可选） +（mod_）图片功能类别（必选）+ 图片模块名称（可选） + 图片精度（可选）\n")])])]),s("ul",[s("li",[a._v("图片业务：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("pp_：拍拍\nwx_：微信\nsq_：手Q\njd_：京东商城\n")])])]),s("ul",[s("li",[a._v("图片功能类别：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mod_：是否公共，可选\nicon：模块类固化的图标\nlogo：LOGO类\nspr：单页面各种元素合并集合\nbtn：按钮\nbg：可平铺或者大背景\n")])])]),s("ul",[s("li",[a._v("图片模块名称：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("goodslist：商品列表\ngoodsinfo：商品信息\nuserava tar：用户头像\n")])])]),s("ul",[s("li",[a._v("图片精度：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("普清：@1x\nRetina：@2x | @3x\n")])])]),s("ul",[s("li",[a._v("示例：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("公共模块：\nwx_mod_btn_goodlist@2x.png\nwx_mod_btn_goodlist.png\nmod_btn_goodlist.png \n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("非公共模块：\nwx_btn_goodlist@2x.png\nwx_btn_goodlist.png\nbtn_goodlist.png\n")])])]),s("ul",[s("li",[a._v("交叉业务协作\n业务交叉协作的时候，为了避免图片命名冲突，建议图片名加上业务和模块前辍，如拍拍侧和手Q侧的业务交叉合作时，侧栏导航icon雪碧图命名：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("推荐：\npp_icon_mod_sidenav.png\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("不推荐：\nicon_mod_sidenav.png\n")])])]),s("ul",[s("li",[a._v("处理高清图片的时候，命名应该加上图片相应的精度说明")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("推荐：\njdc_logo@1x.png\njdc_logo@2x.png\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("不推荐：\njdc_logo.png\njdc_logo_retina.png\n")])])]),s("h2",{attrs:{id:"html-css文件命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-css文件命名"}},[a._v("#")]),a._v(" HTML/CSS文件命名")]),a._v(" "),s("p",[a._v("确保文件命名总是以字母开头而不是数字，且字母一律小写，以下划线连接且不带其他标点符号，如：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- HTML --\x3e\njdc.html\njdc_list.html\njdc_detail.html\n\x3c!-- SASS --\x3e\njdc.scss\njdc_list.scss\njdc_detail.scss\n")])])]),s("h2",{attrs:{id:"classname命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#classname命名"}},[a._v("#")]),a._v(" ClassName命名")]),a._v(" "),s("p",[a._v("ClassName的命名应该尽量精短、明确，必须以字母开头命名，且全部字母为小写，单词之间统一使用下划线 “_” 连接。")]),a._v(" "),s("ul",[s("li",[a._v("命名原则")])]),a._v(" "),s("p",[a._v("基于姓氏命名法（继承 + 外来）祖先模块不能出现下划线，除了是全站公用模块，如 mod_ 系列的命名。")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="modulename">\n\t<div class="modulename_info">\n\t\t<div class="modulename_son"></div>\n\t\t<div class="modulename_son"></div>\n\t</div>\n</div>\n\x3c!-- 这个是全站公用模块，祖先模块允许直接出现下划线 --\x3e\n<div class="mod_info">\n\t<div class="mod_info_son"></div>\n\t<div class="mod_info_son"></div>\n</div>\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="modulename_info">\n\t<div class="modulename_info_son"></div>\n\t<div class="modulename_info_son"></div>\n\t...\t\t\n</div>\n')])])]),s("p",[a._v("在子孙模块数量可预测的情况下，严格继承祖先模块的命名前缀")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="modulename">\n\t<div class="modulename_cover"></div>\n\t<div class="modulename_info"></div>\n</div>\n')])])]),s("p",[a._v("当子孙模块超过4级或以上的时候，可以考虑在祖先模块内具有识辨性的独立缩写作为新的子孙模块\n推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="modulename">\n\t<div class="modulename_cover"></div>\n\t<div class="modulename_info">\n    \t<div class="modulename_info_user">\n    \t\t<div class="modulename_info_user_img">\n    \t\t\t<img src="" alt="">\n    \t\t\t\x3c!-- 这个时候 miui 为 modulename_info_user_img 首字母缩写--\x3e\n    \t\t\t<div class="miui_tit"></div>\n    \t\t\t<div class="miui_txt"></div>\n    \t\t\t...\n    \t\t</div>\n    \t</div>\n    \t<div class="modulename_info_list"></div>\n\t</div>\n</div>\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="modulename">\n\t<div class="modulename_cover"></div>\n\t<div class="modulename_info">\n    \t<div class="modulename_info_user">\n    \t\t<div class="modulename_info_user_img">\n    \t\t\t<img src="" alt="">\n    \t\t\t<div class="modulename_info_user_img_tit"></div>\n    \t\t\t<div class="modulename_info_user_img_txt"></div>\n    \t\t\t...\n    \t\t</div>\n    \t</div>\n    \t<div class="modulename_info_list"></div>\n\t</div>\n</div>\n')])])]),s("ul",[s("li",[a._v("模块命名")])]),a._v(" "),s("p",[a._v("全站公共模块：以 mod_ 开头")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="mod_yours"></div>\n')])])]),s("p",[a._v("业务公共模块：以 业务名_mod_ 开头")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="paipai_mod_yours"></div>\n')])])]),s("ul",[s("li",[a._v("常用命名推荐")])]),a._v(" "),s("p",[a._v("注意：ad、banner、gg、guanggao 等有机会和广告挂勾的字眠不建议直接用来做ClassName，因为有些浏览器插件（Chrome的广告拦截插件等）会直接过滤这些类名。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="ad"></div>\n')])])]),s("p",[a._v("这种广告的英文或拼音类名不应该出现。另外，敏感不和谐字眼也不应该出现，如：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="fuck"></div>\n<div class="jer"></div>\n<div class="sm"></div>\n<div class="gcd"></div> \n<div class="ass"></div> \n<div class="KMT"></div> \n')])])]),s("h1",{attrs:{id:"html规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html规范"}},[a._v("#")]),a._v(" HTML规范")]),a._v(" "),s("h2",{attrs:{id:"代码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[a._v("#")]),a._v(" 代码规范")]),a._v(" "),s("h3",{attrs:{id:"doctype-声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctype-声明"}},[a._v("#")]),a._v(" DOCTYPE 声明")]),a._v(" "),s("p",[a._v("一个DOCTYPE必须包含以下部分，并严格按照顺序出现：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("一个ASCII字符串 “<!DOCTYPE” ，大小写不敏感\n一个或多个空白字符\n一个ASCII字符串”html”，大小写不敏感\n一个可选的历史遗留的DOCTYPE字符串 （DOCTYPE legacy string），或者一个可选的已过时但被允许的DOCTYPE字符串 （obsolete permitted DOCTYPE string） 字符串\n一个或多个空白字符\n一个编码为 U+003E 的字符 “>”\n")])])]),s("h4",{attrs:{id:"团队约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<!DOCTYPE html>\n")])])]),s("h3",{attrs:{id:"页面语言lang"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面语言lang"}},[a._v("#")]),a._v(" 页面语言LANG")]),a._v(" "),s("p",[a._v("Lang属性的取值应该遵循互联网工程任务组–IETF（The Internet Engineering Task Force）制定的关于语言标签的文档 BCP 47 - Tags for Identifying Languages")]),a._v(" "),s("h4",{attrs:{id:"团队约定-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-2"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("推荐使用属性值 cmn-Hans-CN（简体, 中国大陆），但是考虑浏览器和操作系统的兼容性，目前仍然使用 zh-CN 属性值")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<html lang="zh-CN">\n')])])]),s("h4",{attrs:{id:"更多地区语言参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多地区语言参考"}},[a._v("#")]),a._v(" 更多地区语言参考")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)\nzh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)\nzh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)\nzh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)\n")])])]),s("h3",{attrs:{id:"charset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#charset"}},[a._v("#")]),a._v(" CHARSET")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("因为 ISO-8859 中字符集大小是有限的，且在多语言环境中不兼容，所以 Unicode 联盟开发了 Unicode 标准。\nUnicode 标准覆盖了（几乎）所有的字符、标点符号和符号。\nUnicode 使文本的处理、存储和运输，独立于平台和语言。\nHTML-5 中默认的字符编码是 UTF-8\n")])])]),s("h4",{attrs:{id:"团队约定-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-3"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("一般情况下统一使用 “UTF-8” 编码")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta charset="UTF-8">\n')])])]),s("p",[a._v("由于历史原因，有些业务可能会使用 “GBK” 编码")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta charset="GBK">\n')])])]),s("p",[a._v("请尽量统一写成标准的“UTF-8”，不要写成 “utf-8” 或 “utf8” 或 “UTF8”。")]),a._v(" "),s("p",[a._v("根据 IETF对UTF-8的定义，其编码标准的写法是 “UTF-8”；而 UTF8 或 utf8的写法只是出现在某些编程系统中，如 .NET framework的类System.Text.Encoding中的一个属性名就叫 UTF8。")]),a._v(" "),s("h3",{attrs:{id:"元素及标签闭合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素及标签闭合"}},[a._v("#")]),a._v(" 元素及标签闭合")]),a._v(" "),s("p",[a._v("HTML元素共有以下5种：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("空元素：area、base、br、col、command、embed、hr、img、input、keygen、link、meta、param、source、track、wbr")])]),a._v(" "),s("li",[s("p",[a._v("原始文本元素：script、style\nRCDATA元素：textarea、title")])]),a._v(" "),s("li",[s("p",[a._v("外来元素：来自MathML命名空间和SVG命名空间的元素。")])]),a._v(" "),s("li",[s("p",[a._v("常规元素：其他HTML允许的元素都称为常规元素。\n元素标签的闭合应遵循以下原则：")])]),a._v(" "),s("li",[s("p",[a._v("原始文本元素、RCDATA元素以及常规元素都有一个开始标签来表示开始，一个结束标签来表示结束。")])]),a._v(" "),s("li",[s("p",[a._v("某些元素的开始和结束标签是可以省略的，如果规定标签不能被省略，那么就绝对不能省略它。")])]),a._v(" "),s("li",[s("p",[a._v("空元素只有一个开始标签，且不能为空元素设置结束标签。")])]),a._v(" "),s("li",[s("p",[a._v("外来元素可以有一个开始标签和配对的结束标签，或者只有一个自闭合的开始标签，且后者情况下该元素不能有结束标签。")])])]),a._v(" "),s("h4",{attrs:{id:"团队约定-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-4"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("为了能让浏览器更好的解析代码以及能让代码具有更好的可读性，有如下约定：")]),a._v(" "),s("p",[a._v("所有具有开始标签和结束标签的元素都要写上起止标签，某些允许省略开始标签或和束标签的元素亦都要写上。\n空元素标签都不加 “/” 字符")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div>\n    <h1>我是h1标题</h1>\n    <p>我是一段文字，我有始有终，浏览器能正确解析</p>\n</div>\n<br>\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div>\n    <h1>我是h1标题</h1>\n    <p>我是一段文字，我有始无终，浏览器亦能正确解析\n</div>\n<br/>\n")])])]),s("h2",{attrs:{id:"书写风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#书写风格"}},[a._v("#")]),a._v(" 书写风格")]),a._v(" "),s("h3",{attrs:{id:"html代码大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html代码大小写"}},[a._v("#")]),a._v(" HTML代码大小写")]),a._v(" "),s("ul",[s("li",[a._v("HTML标签名、类名、标签属性和大部分属性值统一用小写")])]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="demo"></div>\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="DEMO"></div>\t\n<DIV CLASS="DEMO"></DIV>\n')])])]),s("ul",[s("li",[a._v("HTML文本、CDATA、JavaScript、meta标签某些属性等内容可大小写混合")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\x3c!-- 优先使用 IE 最新版本和 Chrome Frame --\x3e\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>\n\n\x3c!-- HTML文本内容 --\x3e\n<h1>I AM WHAT I AM </h1>\n\n\x3c!-- JavaScript 内容 --\x3e\n<script type="text/javascript">\n\tvar demoName = \'demoName\';\n\t...\n<\/script>\n\t\n\x3c!-- CDATA 内容 --\x3e\n<script type="text/javascript"><![CDATA[\n...\n]]><\/script>\n')])])]),s("h3",{attrs:{id:"类型属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型属性"}},[a._v("#")]),a._v(" 类型属性")]),a._v(" "),s("ul",[s("li",[a._v("不需要为 CSS、JS指定类型属性，HTML5 中默认已包含")])]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<link rel="stylesheet" href="" >\n<script src=""><\/script>\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<link rel="stylesheet" type="text/css" href="" >\n<script type="text/javascript" src="" ><\/script>\n')])])]),s("h3",{attrs:{id:"元素属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素属性"}},[a._v("#")]),a._v(" 元素属性")]),a._v(" "),s("ul",[s("li",[a._v("元素属性值使用双引号语法")]),a._v(" "),s("li",[a._v("元素属性值可以写上的都写上")])]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<input type="text">\n\t\n<input type="radio" name="name" checked="checked" >\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<input type=text>\t\n<input type=\'text\'>\n\t\n<input type="radio" name="name" checked >\n')])])]),s("h3",{attrs:{id:"特殊字符引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符引用"}},[a._v("#")]),a._v(" 特殊字符引用")]),a._v(" "),s("p",[a._v("文本可以和字符引用混合出现。这种方法可以用来转义在文本中不能合法出现的字符。")]),a._v(" "),s("p",[a._v("在 HTML 中不能使用小于号 “<” 和大于号 “>”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<a href="#">more&gt;&gt;</a>\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<a href="#">more>></a>\n')])])]),s("h3",{attrs:{id:"代码缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码缩进"}},[a._v("#")]),a._v(" 代码缩进")]),a._v(" "),s("p",[a._v("统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="jdc">\n    <a href="#"></a>\n</div>\n')])])]),s("h3",{attrs:{id:"纯数字输入框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纯数字输入框"}},[a._v("#")]),a._v(" 纯数字输入框")]),a._v(" "),s("p",[a._v('使用 type="tel" 而不是 type="number"')]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<input type="tel">\n')])])]),s("h3",{attrs:{id:"代码嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码嵌套"}},[a._v("#")]),a._v(" 代码嵌套")]),a._v(" "),s("p",[a._v("元素嵌套规范，每个块状元素独立一行，内联元素可选")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div>\n    <h1></h1>\n    <p></p>\n</div>\t\n<p><span></span><span></span></p>\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div>\n    <h1></h1><p></p>\n</div>\t\n<p> \n    <span></span>\n    <span></span>\n</p>\n")])])]),s("p",[a._v("段落元素与标题元素只能嵌套内联元素")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<h1><span></span></h1>\n<p><span></span><span></span></p>\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<h1><div></div></h1>\n<p><div></div><div></div></p>\n")])])]),s("h2",{attrs:{id:"注释规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释规范"}},[a._v("#")]),a._v(" 注释规范")]),a._v(" "),s("p",[a._v("遵循标准")]),a._v(" "),s("ul",[s("li",[a._v("必须以4个有序字符开始：编码为 U+003C LESS-THAN SIGN 的小于号, 编码为 U+0021 EXCLAMATION MARK 的感叹号, 编码为 U+002D HYPHEN-MINUS 横线, 编码为 U+002D HYPHEN-MINUS横线 ，即 “<!–”")]),a._v(" "),s("li",[a._v("在此之后是注释内容，注释的内容有以下限制：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("* 不能以单个 “>” (U+003E) 字符开始\n* 不能以由 “-“（U+002D HYPHEN-MINUS）和 ”>” (U+003E) 组合的字符开始，即 “->”\n* 不能包含两个连续的 U+002D HYPHEN-MINUS 字符，即 “–”\n* 不能以一个 U+002D HYPHEN-MINUS 字符结束，即 “-”\n")])])]),s("ul",[s("li",[a._v("必须以3个有序字符结束：U+002D HYPHEN-MINUS, U+002D HYPHEN-MINUS, U+003E GREATER-THAN SIGN，即 “–>”")])]),a._v(" "),s("p",[a._v("标准写法：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!--Comment Text--\x3e\n")])])]),s("p",[a._v("错误的写法：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!--\x3eThe Wrong Comment Text--\x3e\n\n\x3c!---\x3eThe Wrong Comment Text--\x3e\n\n\x3c!--The--Wrong--Comment Text--\x3e\n\n\x3c!--The Wrong Comment Text---\x3e\n")])])]),s("h3",{attrs:{id:"团队约定-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-5"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("h4",{attrs:{id:"单行注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[a._v("#")]),a._v(" 单行注释")]),a._v(" "),s("p",[a._v("一般用于简单的描述，如某些状态描述、属性描述等\n注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- Comment Text --\x3e<div>...</div>\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div>...</div>\x3c!-- Comment Text --\x3e\t\n\t\n<div>\x3c!-- Comment Text --\x3e\n    ...\n</div>\n")])])]),s("h4",{attrs:{id:"模块注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块注释"}},[a._v("#")]),a._v(" 模块注释")]),a._v(" "),s("p",[a._v("一般用于描述模块的名称以及模块开始与结束的位置\n注释内容前后各一个空格字符，"),a._v(" 表示模块开始，"),a._v(" 表示模块结束，模块与模块之间相隔一行")]),a._v(" "),s("p",[a._v("推荐写法：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\x3c!-- S Comment Text A --\x3e\t\n<div class="mod_a">\n    ...\n</div>\n\x3c!-- E Comment Text A --\x3e\n\t\n\x3c!-- S Comment Text B --\x3e\t\n<div class="mod_b">\n    ...\n</div>\n\x3c!-- E Comment Text B --\x3e\n')])])]),s("p",[a._v("不推荐写法：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\x3c!-- S Comment Text A --\x3e\n<div class="mod_a">\n    ...\n</div>\n\x3c!-- E Comment Text A --\x3e\n\x3c!-- S Comment Text B --\x3e\t\n<div class="mod_b">\n    ...\n</div>\n\x3c!-- E Comment Text B --\x3e\n')])])]),s("p",[a._v("嵌套模块注释")]),a._v(" "),s("p",[a._v("当模块注释内再出现模块注释的时候，为了突出主要模块，嵌套模块不再使用")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- S Comment Text --\x3e\n\x3c!-- E Comment Text --\x3e\n")])])]),s("p",[a._v("而改用")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- /Comment Text --\x3e\n")])])]),s("p",[a._v("注释写在模块结尾标签底部，单独一行。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\x3c!-- S Comment Text A --\x3e\n<div class="mod_a">\n\t\t\n    <div class="mod_b">\n        ...\n    </div>\n    \x3c!-- /mod_b --\x3e\n    \t\n    <div class="mod_c">\n    \t...\n    </div>\n    \x3c!-- /mod_c --\x3e\n\t\t\n</div>\n\x3c!-- E Comment Text A --\x3e\n')])])]),s("h1",{attrs:{id:"css规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css规范"}},[a._v("#")]),a._v(" CSS规范")]),a._v(" "),s("h2",{attrs:{id:"代码规范-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码规范-2"}},[a._v("#")]),a._v(" 代码规范")]),a._v(" "),s("h3",{attrs:{id:"编码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码规范"}},[a._v("#")]),a._v(" 编码规范")]),a._v(" "),s("p",[a._v("CSS样式表是一个序列通用字符集，传输和存储过程中，这些字符必须由支持 US-ASCII（例如 UTF-8, ISO 8859-x, SHIFT JIS 等）字符编码方式编译。")]),a._v(" "),s("h4",{attrs:{id:"文档内嵌样式表编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档内嵌样式表编码"}},[a._v("#")]),a._v(" 文档内嵌样式表编码")]),a._v(" "),s("ul",[s("li",[a._v("当样式出现在其它文档，如 HTML 的 STYLE 标签或标签属性“style”，样式的编码由文档的决定。")])]),a._v(" "),s("h4",{attrs:{id:"文档外链样式表编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档外链样式表编码"}},[a._v("#")]),a._v(" 文档外链样式表编码")]),a._v(" "),s("p",[a._v("文档外链样式表的编码可以由以下各项按照由高到低的优先级顺序决定：")]),a._v(" "),s("ul",[s("li",[a._v("HTTP “Content-Type” 字段参数 “charset”（或其它协议相似的参数）")]),a._v(" "),s("li",[a._v("BOM（byte-order mark）和（或）@charset")]),a._v(" "),s("li",[a._v("Link 中的元数据设置（如果有的话）")]),a._v(" "),s("li",[a._v("引用样式表字符集或文档编码（如果有的话）")]),a._v(" "),s("li",[a._v("假定为 UTF-8 编码")])]),a._v(" "),s("h4",{attrs:{id:"样式表编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样式表编码"}},[a._v("#")]),a._v(" 样式表编码")]),a._v(" "),s("ul",[s("li",[a._v("@charset规则一定要在样式文件的第一行首个字符位置开始，否则的话就会有机会让 BOM 设置生效（如果有设置 BOM 的话）而优于 @charset 作为样式表的编码")]),a._v(" "),s("li",[a._v('@charset ""; 一定要写上，并且用小写字母，不能出现转义符')])]),a._v(" "),s("h4",{attrs:{id:"团队约定-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-6"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("ul",[s("li",[a._v("样式文件必须写上 @charset 规则，并且一定要在样式文件的第一行首个字符位置开始写，编码名用 “UTF-8”")]),a._v(" "),s("li",[a._v("字符 @charset “”; 都用小写字母，不能出现转义符，编码名允许大小混写")]),a._v(" "),s("li",[a._v("考虑到在使用“UTF-8”编码情况下 BOM 对代码的污染和编码显示的问题，在可控范围下，坚决不使用 BOM。")])]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('@charset "UTF-8";\n\n.jdc{}\n')])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('/**\n * @desc File Info\n * @author Author Name\n * @date 2015-10-10\n */\n \n/* @charset规则不在文件首行首个字符开始 */\n@charset "UTF-8";\n\n.jdc{}\n@CHARSET "UTF-8";\n/* @charset规则没有用小写 */\n\n.jdc{}\n/* 无@charset规则 */\n.jdc{}\n')])])]),s("h3",{attrs:{id:"代码风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码风格"}},[a._v("#")]),a._v(" 代码风格")]),a._v(" "),s("h4",{attrs:{id:"代码格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码格式化"}},[a._v("#")]),a._v(" 代码格式化")]),a._v(" "),s("p",[a._v("样式书写一般有两种：")]),a._v(" "),s("p",[a._v("一种是紧凑格式 (Compact)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc{ display: block;width: 50px;}\n")])])]),s("p",[a._v("一种是展开格式（Expanded）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc{\n    display: block;\n    width: 50px;\n}\n")])])]),s("h4",{attrs:{id:"团队约定-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-7"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("统一使用展开格式书写样式")]),a._v(" "),s("h4",{attrs:{id:"代码大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码大小写"}},[a._v("#")]),a._v(" 代码大小写")]),a._v(" "),s("p",[a._v("样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc{\n\tdisplay:block;\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".JDC{\n\tDISPLAY:BLOCK;\n}\n")])])]),s("h4",{attrs:{id:"选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[a._v("#")]),a._v(" 选择器")]),a._v(" "),s("ul",[s("li",[a._v("尽量少用通用选择器 *")]),a._v(" "),s("li",[a._v("不使用 ID 选择器")]),a._v(" "),s("li",[a._v("不使用无具体语义定义的标签选择器")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* 推荐 */\n.jdc {}\n.jdc li {}\n.jdc li p{}\n\n/* 不推荐 */\n*{}\n#jdc {}\n.jdc div{}\n")])])]),s("h4",{attrs:{id:"代码缩进-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码缩进-2"}},[a._v("#")]),a._v(" 代码缩进")]),a._v(" "),s("p",[a._v("统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    width: 100%;\n    height: 100%;\n}\n")])])]),s("p",[a._v("分号")]),a._v(" "),s("p",[a._v("每个属性声明末尾都要加分号；")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    width: 100%;\n    height: 100%;\n}\n")])])]),s("p",[a._v("代码易读性")]),a._v(" "),s("p",[a._v("左括号与类名之间一个空格，冒号与属性值之间一个空格")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {     width: 100%; }\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc{     width:100%;}\n")])])]),s("p",[a._v("逗号分隔的取值，逗号之后一个空格")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    box-shadow: 1px 1px 1px #333, 2px 2px 2px #ccc;\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    box-shadow: 1px 1px 1px #333,2px 2px 2px #ccc;\n}\n")])])]),s("p",[a._v("为单个css选择器或新申明开启新行")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc, \n.jdc_logo, \n.jdc_hd {\n    color: #ff0;\n}\n.nav{\n    color: #fff;\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc,jdc_logo,.jdc_hd {\n    color: #ff0;\n}.nav{\n    color: #fff;\n}\n")])])]),s("p",[a._v("颜色值 rgb() rgba() hsl() hsla() rect() 中不需有空格，且取值不要带有不必要的 0")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    color: rgba(255,255,255,.5);\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    color: rgba( 255, 255, 255, 0.5 );\n}\n")])])]),s("p",[a._v("属性值十六进制数值能用简写的尽量用简写")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    color: #fff;\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    color: #ffffff;\n}\n")])])]),s("p",[a._v("不要为 0 指明单位")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    margin: 0 10px;\n}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    margin: 0px 10px;\n}\n")])])]),s("h4",{attrs:{id:"属性值引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性值引号"}},[a._v("#")]),a._v(" 属性值引号")]),a._v(" "),s("p",[a._v("css属性值需要用到引号时，统一使用单引号")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* 推荐 */\n.jdc { \n\tfont-family: 'Hiragino Sans GB';\n}\n\n/* 不推荐 */\n.jdc { \n\tfont-family: \"Hiragino Sans GB\";\n}\n")])])]),s("h4",{attrs:{id:"属性书写顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性书写顺序"}},[a._v("#")]),a._v(" 属性书写顺序")]),a._v(" "),s("p",[a._v("建议遵循以下顺序：")]),a._v(" "),s("ul",[s("li",[a._v("布局定位属性：display / position / float / clear / visibility / overflow")]),a._v(" "),s("li",[a._v("自身属性：width / height / margin / padding / border / background")]),a._v(" "),s("li",[a._v("文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word")]),a._v(" "),s("li",[a._v("其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    display: block;\n    position: relative;\n    float: left;\n    width: 100px;\n    height: 100px;\n    margin: 0 10px;\n    padding: 20px 0;\n    font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\n    color: #333;\n    background: rgba(0,0,0,.5);\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    -o-border-radius: 10px;\n    -ms-border-radius: 10px;\n    border-radius: 10px;\n}\n")])])]),s("h4",{attrs:{id:"css3浏览器私有前缀写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3浏览器私有前缀写法"}},[a._v("#")]),a._v(" CSS3浏览器私有前缀写法")]),a._v(" "),s("p",[a._v("CSS3 浏览器私有前缀在前，标准前缀在后")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    -o-border-radius: 10px;\n    -ms-border-radius: 10px;\n    border-radius: 10px;\n}\n")])])]),s("h2",{attrs:{id:"注释规范-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释规范-2"}},[a._v("#")]),a._v(" 注释规范")]),a._v(" "),s("ul",[s("li",[a._v("注释以字符 /* 开始，以字符 */ 结束")]),a._v(" "),s("li",[a._v("注释不能嵌套")])]),a._v(" "),s("h3",{attrs:{id:"团队约定-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-8"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("h4",{attrs:{id:"单行注释-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行注释-2"}},[a._v("#")]),a._v(" 单行注释")]),a._v(" "),s("p",[a._v("注释内容第一个字符和最后一个字符都是一个空格字符，单独占一行，行与行之间相隔一行")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* Comment Text */\n.jdc{}\n\n/* Comment Text */\n.jdc{}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/*Comment Text*/\n.jdc{\n\tdisplay: block;\n}\n.jdc{\n\tdisplay: block;/*Comment Text*/\n}\n")])])]),s("h4",{attrs:{id:"模块注释-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块注释-2"}},[a._v("#")]),a._v(" 模块注释")]),a._v(" "),s("p",[a._v("注释内容第一个字符和最后一个字符都是一个空格字符，/* 与 模块信息描述占一行，多个横线分隔符-与*/占一行，行与行之间相隔两行")]),a._v(" "),s("p",[a._v("推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* Module A\n---------------------------------------------------------------- */\n.mod_a {}\n\n\n/* Module B\n---------------------------------------------------------------- */\n.mod_b {}\n")])])]),s("p",[a._v("不推荐：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* Module A ---------------------------------------------------- */\n.mod_a {}\n/* Module B ---------------------------------------------------- */\n.mod_b {}\n")])])]),s("h4",{attrs:{id:"文件信息注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件信息注释"}},[a._v("#")]),a._v(" 文件信息注释")]),a._v(" "),s("p",[a._v("在样式文件编码声明 @charset 语句下面注明页面名称、作者、创建日期等信息")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('@charset "UTF-8";\n/**\n * @desc File Info\n * @author Author Name\n * @date 2015-10-10\n */\n')])])]),s("h2",{attrs:{id:"sass规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sass规范"}},[a._v("#")]),a._v(" SASS规范")]),a._v(" "),s("h3",{attrs:{id:"语法选用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法选用"}},[a._v("#")]),a._v(" 语法选用")]),a._v(" "),s("p",[a._v("SASS有两种语法格式，一种是 SCSS (Sassy CSS)，另一种是缩进格式（Indented Syntax），有时称之为 Sass。")]),a._v(" "),s("h4",{attrs:{id:"scss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scss"}},[a._v("#")]),a._v(" SCSS")]),a._v(" "),s("p",[a._v("SCSS语法基于CSS语法扩展，每一个有效的 CSS 文件都是一个有效的具有相同含义的 SCSS 文件。")]),a._v(" "),s("p",[a._v("换种说法就是SCSS能识别大多数的 CSS hacks写法和浏览器前缀写法以及早期的 IE 滤镜写法，这种格式以.scss 作为扩展名。")]),a._v(" "),s("h4",{attrs:{id:"sass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sass"}},[a._v("#")]),a._v(" Sass")]),a._v(" "),s("p",[a._v("Sass 使用 “缩进”代替“花括号”表示属性属于某个选择器，用 “换行” 代替 “分号” 分隔属性，很多人认为这样做比 SCSS 更容易阅读，书写也更快速。")]),a._v(" "),s("p",[a._v("缩进格式也可以使用Sass的全部功能，只是与 SCSS 相比个别地方采取了不同的表达方式，具体请查看 the indented syntax reference。这种格式以 .sass 作为拓展名。")]),a._v(" "),s("h4",{attrs:{id:"团队约定-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-9"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("考虑到 SCSS语法对CSS语法友好的兼容性和扩展性，我们在使用SASS编写样式的时候，统一使用 SCSS 语法。")]),a._v(" "),s("h3",{attrs:{id:"编码格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码格式"}},[a._v("#")]),a._v(" 编码格式")]),a._v(" "),s("p",[a._v("当在 Ruby1.9或更新的版本运行的时候，SASS 能识辨文档的字符编码。")]),a._v(" "),s("p",[a._v("SASS 遵循 CSS 规范去确定样式文件的编码，进而转回 Ruby 字符串编码。")]),a._v(" "),s("p",[a._v("这意味着SASS编译的时候会首先检测 BOM，然后到 @charset 声明，再到 Ruby 字符串编码，如果以上都没有设置，SASS 会认为文档的编码为 UTF-8")]),a._v(" "),s("h4",{attrs:{id:"团队约定-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-10"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("严格遵守上面 “CSS规范” 中的 “编码规范”\n更多关于 SASS 编码：SASS Encodings")]),a._v(" "),s("h3",{attrs:{id:"sass注释规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sass注释规范"}},[a._v("#")]),a._v(" SASS注释规范")]),a._v(" "),s("p",[a._v("SASS支持 CSS 标准的多行注释 /* */，同时也支持单行注释 //。")]),a._v(" "),s("p",[a._v("多行注释在使用非 Compressed 模式进行编译后的输出文件中会保留下来，单行注释 // 侧会被移除\n多行注释和单行注释在 SASS 编译后输出的压缩 CSS 文件都会被移除\n当多行注释内容第一个字符是感叹号 “!” 的时候，即 /*! */，SASS")]),a._v(" "),s("p",[a._v("无论用哪一种编译方式编译注释都会保留\n注释内容可以加入 SASS 变量")]),a._v(" "),s("h4",{attrs:{id:"团队约定-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队约定-11"}},[a._v("#")]),a._v(" 团队约定")]),a._v(" "),s("p",[a._v("SCSS 文件内\n全部遵循 CSS 注释规范\n不使用 /*! */ 注释方式\n注释内不放 SASS 变量\n标准的注释规范如下：")]),a._v(" "),s("h3",{attrs:{id:"嵌套规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套规范"}},[a._v("#")]),a._v(" 嵌套规范")]),a._v(" "),s("p",[a._v("选择器嵌套")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* CSS */\n.jdc {}\nbody .jdc {}\n\n/* SCSS */\n.jdc {\n    body & {}\n}\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* CSS */\n.jdc {}\n.jdc_cover {}\n.jdc_info {}\n.jdc_info_name {}\n\n/* SCSS */\n.jdc {\n    &_cover {}\n    &_info {\n        &_name {}\n    }\n}\n")])])]),s("p",[a._v("属性嵌套")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/* CSS */\n.jdc {\n    background-color: red;\n    background-repeat: no-repeat;\n    background-image: url(/img/icon.png);\n    background-position: 0 0;\n}\n\n/* SCSS */\n.jdc {\n    background: {\n        color: red;\n        repeat: no-repeat;\n        image: url(/img/icon.png);\n        position: 0 0;\n    }\n}\n")])])]),s("p",[a._v("变量")]),a._v(" "),s("p",[a._v("可复用属性尽量抽离为页面变量，易于统一维护")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// CSS\n.jdc {\n    color: red;\n    border-color: red;\n}\n\n// SCSS\n$color: red;\n.jdc {\n    color: $color;\n    border-color: $color;\n}\n")])])]),s("p",[a._v("混合(mixin)")]),a._v(" "),s("p",[a._v("根据功能定义模块，然后在需要使用的地方通过 @include调用，避免编码时重复输入代码段")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// CSS\n.jdc_1 {\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n}\n.jdc_2 {\n    -webkit-border-radius: 10px;\n    border-radius: 10px;\n}\n\n// SCSS\n@mixin radius($radius:5px) {\n    -webkit-border-radius: $radius;\n    border-radius: $radius;\n}\n.jdc_1 {\n    @include radius; //参数使用默认值\n}\n.jdc_2 {\n    @include radius(10px);\n}\n\n\n\n// CSS\n.jdc_1 {\n    background: url(/img/icon.png) no-repeat -10px 0;\n}\n.jdc_2 {\n    background: url(/img/icon.png) no-repeat -20px 0;\n}\n\n// SCSS\n@mixin icon($x:0, $y:0) {\n    background: url(/img/icon.png) no-repeat $x, $y;\n}\n.jdc_1 {\n    @include icon(-10px, 0);\n}\n.jdc_2 {\n    @include icon(-20px, 0);\n}\n")])])]),s("p",[a._v("占位选择器 %")]),a._v(" "),s("p",[a._v("如果不调用则不会有任何多余的 css 文件，占位选择器以 % 标识定义，通过@extend")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//scss\n%borderbox {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.jdc {\n    @extend %borderbox;\n}\n")])])]),s("p",[a._v("extend 继承")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// CSS\n.jdc_1 {\n    font-size: 12px;\n    color: red;\n}\n.jdc_2 {\n    font-size: 12px;\n    color: red;\n    font-weight: bold;\n}\n\n// SCSS\n.jdc_1 {\n    font-size: 12px;\n    color: red;\n}\n.jdc_2 {\n    @extend .jdc_1;\n    font-weight: bold;\n}\n\n// 或者\n%font_red {\n    font-size: 12px;\n    color: red;\n}\n.jdc_1 {\n    @extend %font_red;\n}\n.jdc_2 {\n    @extend %font_red;\n    font-weight: bold;\n}\n")])])]),s("p",[a._v("for 循环")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// CSS\n.jdc_1 {background-position: 0 -20px;}\n.jdc_2 {background-position: 0 -40px;}\n.jdc_3 {background-position: 0 -60px;}\n\n// SCSS\n@for $i from 1 through 3 {\n    .jdc_#{$i} {\n        background-position: 0 (-20px) * $i;\n    }\n}\n")])])]),s("p",[a._v("each 循环")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// CSS\n.jdc_list {\n    background-image: url(/img/jdc_list.png);\n}\n.jdc_detail {\n    background-image: url(/img/jdc_detail.png);\n}\n\n// SCSS\n@each $name in list, detail {\n    .jdc_#{$name} {\n        background-image: url(/img/jdc_#{$name}.png);\n    }\n}\n\n\n// CSS\n.jdc_list {\n    background-image: url(/img/jdc_list.png);\n    background-color: red;\n}\n.jdc_detail {\n    background-image: url(/img/jdc_detail.png);\n    background-color: blue;\n}\n\n// SCSS\n@each $name, $color in (list, red), (detail, blue) {\n    .jdc_#{$name} {\n        background-image: url(/img/jdc_#{$name}.png);\n        background-color: $color;\n    }\n}\n")])])]),s("p",[a._v("function 函数")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("@function pxToRem($px) {\n    @return $px / 10px * 1rem;\n}\n.jdc {\n    font-size: pxToRem(12px);\n}\n")])])]),s("p",[a._v("运算规范\n运算符之间空出一个空格")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(".jdc {\n    width: 100px - 50px;\n    height: 30px / 5;\n}\n")])])]),s("p",[a._v("注意运算单位，单位同时参与运算，所以 10px 不等于10，乘除运算时需要特别注意")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 正确的运算格式\n.jdc {\n    width: 100px - 50px;\n    width: 100px + 50px;\n    width: 100px * 2;\n    width: 100px / 2;\n}\n")])])]),s("h1",{attrs:{id:"js规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js规范"}},[a._v("#")]),a._v(" JS规范")]),a._v(" "),s("h2",{attrs:{id:"语言规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语言规范"}},[a._v("#")]),a._v(" 语言规范")]),a._v(" "),s("p",[a._v("JavaScript 是一种客户端脚本语言，这里列出了编写 JavaScript 时需要遵守的规则。")]),a._v(" "),s("h3",{attrs:{id:"类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[a._v("#")]),a._v(" 类型")]),a._v(" "),s("h4",{attrs:{id:"基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[a._v("#")]),a._v(" 基本类型")]),a._v(" "),s("ul",[s("li",[a._v("字符串")]),a._v(" "),s("li",[a._v("数值")]),a._v(" "),s("li",[a._v("布尔类型")]),a._v(" "),s("li",[a._v("null")]),a._v(" "),s("li",[a._v("undefined")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const foo = 1\nlet bar = foo\n\nbar = 9\n\nconsole.log(foo, bar) // 1, 9\n")])])]),s("h4",{attrs:{id:"复杂类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂类型"}},[a._v("#")]),a._v(" 复杂类型")]),a._v(" "),s("ul",[s("li",[a._v("object")]),a._v(" "),s("li",[a._v("array")]),a._v(" "),s("li",[a._v("function")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const foo = [1, 2, 3]\nconst bar = foo\n\nbar[0] = 9\n\nconsole.log(foo[0], bar[0]) // 9, 9\n")])])]),s("h4",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[a._v("#")]),a._v(" 引用")]),a._v(" "),s("p",[a._v("const 和 let 都是块级作用域，var 是函数级作用域")]),a._v(" "),s("ul",[s("li",[a._v("对所有引用都使用 const，不要使用 var")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nvar a = 1\nvar b = 2\n\n// good\nconst a = 1\nconst b = 2\n")])])]),s("ul",[s("li",[a._v("如果引用是可变动的，则使用 let")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nvar count = 1\nif (count < 10) {\n  count += 1\n}\n\n// good\nlet count = 1\nif (count < 10) {\n  count += 1\n}\n")])])]),s("h4",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),s("ul",[s("li",[a._v("请使用字面量值创建对象")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst a = new Object{}\n\n// good\nconst a = {}\n")])])]),s("ul",[s("li",[a._v("别使用保留字作为对象的键值，这样在 IE8 下不会运行")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst a = {\n  default: {},  // default 是保留字\n  common: {}\n}\n\n// good\nconst a = {\n  defaults: {},\n  common: {}\n}\n")])])]),s("ul",[s("li",[a._v("请使用对象方法的简写方式")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst item = {\n  value: 1,\n\n  addValue: function (val) {\n    return item.value + val\n  }\n}\n\n// good\nconst item = {\n  value: 1,\n\n  addValue(val) {\n    return item.value + val\n  }\n}\n")])])]),s("ul",[s("li",[a._v("请使用对象属性值的简写方式")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const job = 'FrontEnd'\n\n// bad\nconst item = {\n  job: job\n}\n\n// good\nconst item = {\n  job\n}\n")])])]),s("ul",[s("li",[a._v("对象属性值的简写方式要和声明式的方式分组")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const job = 'FrontEnd'\nconst department = 'JDC'\n\n// bad\nconst item = {\n  sex: 'male',\n  job,\n  age: 25,\n  department\n}\n\n// good\nconst item = {\n  job,\n  department,\n  sex: 'male',\n  age: 25\n}\n")])])]),s("h4",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),s("ul",[s("li",[a._v("请使用字面量值创建数组")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst items = new Array()\n\n// good\nconst items = []\n")])])]),s("ul",[s("li",[a._v("向数组中添加元素时，请使用 push 方法")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const items = []\n\n// bad\nitems[items.length] = 'test'\n\n// good\nitems.push('test')\n")])])]),s("ul",[s("li",[a._v("使用拓展运算符 ... 复制数组")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst items = []\nconst itemsCopy = []\nconst len = items.length\nlet i\n\n// bad\nfor (i = 0; i < len; i++) {\n  itemsCopy[i] = items[i]\n}\n\n// good\nitemsCopy = [...items]\n")])])]),s("ul",[s("li",[a._v("使用数组的 map 等方法时，请使用")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// good\n[1, 2, 3].map(x => {\n  const y = x + 1\n  return x * y\n})\n\n// good\n[1, 2, 3].map(x => x + 1)\n\n// bad\nconst flat = {}\n[[0, 1], [2, 3], [4, 5]].reduce((memo, item, index) => {\n  const flatten = memo.concat(item)\n  flat[index] = flatten\n})\n\n// good\nconst flat = {}\n[[0, 1], [2, 3], [4, 5]].reduce((memo, item, index) => {\n  const flatten = memo.concat(item)\n  flat[index] = flatten\n  return flatten\n})\n\n// bad\ninbox.filter((msg) => {\n  const { subject, author } = msg\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee'\n  } else {\n    return false\n  }\n})\n\n// good\ninbox.filter((msg) => {\n  const { subject, author } = msg\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee'\n  }\n\n  return false\n})\n")])])]),s("h4",{attrs:{id:"解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[a._v("#")]),a._v(" 解构赋值")]),a._v(" "),s("ul",[s("li",[a._v("当需要使用对象的多个属性时，请使用解构赋值")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nfunction getFullName (user) {\n  const firstName = user.firstName\n  const lastName = user.lastName\n\n  return `${firstName} ${lastName}`\n}\n\n// good\nfunction getFullName (user) {\n  const { firstName, lastName } = user\n\n  return `${firstName} ${lastName}`\n}\n\n// better\nfunction getFullName ({ firstName, lastName }) {\n  return `${firstName} ${lastName}`\n}\n")])])]),s("ul",[s("li",[a._v("当需要使用数组的多个值时，请同样使用解构赋值")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const arr = [1, 2, 3, 4]\n\n// bad\nconst first = arr[0]\nconst second = arr[1]\n\n// good\nconst [first, second] = arr\n")])])]),s("ul",[s("li",[a._v("函数需要回传多个值时，请使用对象的解构，而不是数组的解构")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nfunction doSomething () {\n  return [top, right, bottom, left]\n}\n\n// 如果是数组解构，那么在调用时就需要考虑数据的顺序\nconst [top, xx, xxx, left] = doSomething()\n\n// good\nfunction doSomething () {\n  return { top, right, bottom, left }\n}\n\n// 此时不需要考虑数据的顺序\nconst { top, left } = doSomething()\n")])])]),s("h4",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),s("ul",[s("li",[a._v("字符串统一使用单引号的形式 ''")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst department = \"JDC\"\n\n// good\nconst department = 'JDC'\n")])])]),s("ul",[s("li",[a._v("字符串太长的时候，请不要使用字符串连接符换行 \\，而是使用 +")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const str = '凹凸实验室 凹凸实验室 凹凸实验室' +\n  '凹凸实验室 凹凸实验室 凹凸实验室' +\n  '凹凸实验室 凹凸实验室'\n")])])]),s("ul",[s("li",[a._v("程序化生成字符串时，请使用模板字符串")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const test = 'test'\n\n// bad\nconst str = ['a', 'b', test].join()\n\n// bad\nconst str = 'a' + 'b' + test\n\n// good\nconst str = `ab${test}`\n")])])]),s("h4",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),s("p",[a._v("请使用函数声明，而不是函数表达式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst foo = function () {\n  // do something\n}\n\n// good\nfunction foo () {\n  // do something\n}\n")])])]),s("ul",[s("li",[a._v("不要在非函数代码块中声明函数")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nif (isUse) {\n  function test () {\n    // do something\n  }\n}\n\n// good\nlet test\nif (isUse) {\n  test = () => {\n    // do something\n  }\n}\n")])])]),s("ul",[s("li",[a._v("不要使用 arguments，可以选择使用 ...")])]),a._v(" "),s("p",[a._v("arguments 只是一个类数组，而 ... 是一个真正的数组")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nfunction test () {\n  const args = Array.prototype.slice.call(arguments)\n  return args.join('')\n}\n\n// good\nfunction test (...args) {\n  return args.join('')\n}\n")])])]),s("ul",[s("li",[a._v("不要更改函数参数的值")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nfunction test (opts) {\n  opts = opts || {}\n}\n\n// good\nfunction test (opts = {}) {\n  // ...\n}\n")])])]),s("h4",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[a._v("#")]),a._v(" 原型")]),a._v(" "),s("ul",[s("li",[a._v("使用 class，避免直接操作 prototype")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nfunction Queue (contents = []) {\n  this._queue = [..contents]\n}\nQueue.prototype.pop = function () {\n  const value = this._queue[0]\n  this._queue.splice(0, 1)\n  return value\n}\n\n// good\nclass Queue {\n  constructor (contents = []) {\n    this._queue = [...contents]\n  }\n\n  pop () {\n    const value = this._queue[0]\n    this._queue.splice(0, 1)\n    return value\n  }\n}\n")])])]),s("h4",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[a._v("#")]),a._v(" 模块")]),a._v(" "),s("ul",[s("li",[a._v("使用标准的 ES6 模块语法 import 和 export")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst util = require('./util')\nmodule.exports = util\n\n// good\nimport Util from './util'\nexport default Util\n\n// better\nimport { Util } from './util'\nexport default Util\n")])])]),s("ul",[s("li",[a._v("不要使用 import 的通配符 *，这样可以确保你只有一个默认的 export")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nimport * as Util from './util'\n\n// good\nimport Util from './util'\n")])])]),s("h4",{attrs:{id:"迭代器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[a._v("#")]),a._v(" 迭代器")]),a._v(" "),s("ul",[s("li",[a._v("不要使用 iterators")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const numbers = [1, 2, 3, 4, 5]\n\n// bad\nlet sum = 0\nfor (let num of numbers) {\n  sum += num\n}\n\n// good\nlet sum = 0\nnumbers.forEach(num => sum += num)\n\n// better\nconst sum = numbers.reduce((total, num) => total + num, 0)\n")])])]),s("h4",{attrs:{id:"对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性"}},[a._v("#")]),a._v(" 对象属性")]),a._v(" "),s("ul",[s("li",[a._v("使用 . 来访问对象属性")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const joke = {\n  name: 'haha',\n  age: 28\n}\n\n// bad\nconst name = joke['name']\n\n// good\nconst name = joke.name\n")])])]),s("h4",{attrs:{id:"变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[a._v("#")]),a._v(" 变量声明")]),a._v(" "),s("p",[a._v("声明变量时，请使用const、let关键字，如果没有写关键字，变量就会暴露在全局上下文中，这样很可能会和现有变量冲突，另外，也很难明确该变量的作用域是什么。")]),a._v(" "),s("p",[a._v("这里推荐使用const来声明变量，我们需要避免全局命名空间的污染。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\ndemo = new Demo()\n\n// good\nconst demo = new Demo()\n")])])]),s("ul",[s("li",[a._v("将所有的 const 和 let 分组")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nlet a\nconst b\nlet c\nconst d\nlet e\n\n// good\nconst b\nconst d\nlet a\nlet c\nlet e\n")])])]),s("h4",{attrs:{id:"hosting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hosting"}},[a._v("#")]),a._v(" Hosting")]),a._v(" "),s("ul",[s("li",[a._v("var 存在变量提升的情况，即 var 声明会被提升至该作用域的顶部，但是他们的赋值并不会。")]),a._v(" "),s("li",[a._v("而 const 和 let 并不存在这种情况，他们被赋予了 Temporal Dead Zones, TDZ")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function example () {\n  console.log(notDefined)   // => throws a ReferenceError\n}\n\nfunction example () {\n  console.log(declareButNotAssigned)  // => undefined\n  var declaredButNotAssigned = true\n}\n\nfunction example () {\n  let declaredButNotAssigned\n  console.log(declaredButNotAssigned)   // => undefined\n  declaredButNotAssigned = true\n}\n\nfunction example () {\n  console.log(declaredButNotAssigned)   // => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned)  // => throws a ReferenceError\n  const declaredButNotAssigned = true\n}\n")])])]),s("ul",[s("li",[a._v("匿名函数的变量名会提升，但函数内容不会")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function example () {\n  console.log(anonymous)  // => undefined\n\n  anonymous()\n\n  var anonymous = function () {\n    console.log('test')\n  }\n}\n")])])]),s("ul",[s("li",[a._v("命名的函数表达式的变量名会被提升，但函数名和函数函数内容并不会")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function example() {\n  console.log(named)  // => undefined\n\n  named()   // => TypeError named is not a function\n\n  superPower()  // => ReferenceError superPower is not defined\n\n  var named = function superPower () {\n    console.log('Flying')\n  }\n}\n\nfunction example() {\n  console.log(named)  // => undefined\n\n  named()   // => TypeError named is not a function\n\n  var named = function named () {\n    console.log('named')\n  }\n}\n")])])]),s("h4",{attrs:{id:"分号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分号"}},[a._v("#")]),a._v(" 分号")]),a._v(" "),s("ul",[s("li",[a._v("我们遵循Standard的规范，不使用分号。")])]),a._v(" "),s("p",[a._v("关于应不应该使用分号的讨论有很多，本规范认为非必要的时候，应该不使用分号，好的 JS 程序员应该清楚场景下是一定要加分号的，相信你也是名好的开发者。")]),a._v(" "),s("p",[a._v("一行开头是括号或者方括号的时候加上分号，其他时候全部不需要。")]),a._v(" "),s("p",[a._v("因为真正会导致上下行解析出问题的token有5个：括号，方括号，正则开头的斜杠，加号，减号。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// bad\nconst test = 'good';\n(function () {\n  const str = 'hahaha';\n})()\n\n// good\nconst test = 'good'\n;(() => {\n  const str = 'hahaha'\n})();\n")])])]),s("h4",{attrs:{id:"标准特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准特性"}},[a._v("#")]),a._v(" 标准特性")]),a._v(" "),s("p",[a._v("为了代码的可移植性和兼容性，我们应该最大化的使用标准方法，例如优先使用 string.charAt(3) 而不是 string[3]")]),a._v(" "),s("h4",{attrs:{id:"eval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eval"}},[a._v("#")]),a._v(" eval()")]),a._v(" "),s("p",[a._v("由于 eval 方法比较evil，所以我们约定禁止使用该方法")]),a._v(" "),s("h4",{attrs:{id:"with"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#with"}},[a._v("#")]),a._v(" with() {}")]),a._v(" "),s("p",[a._v("由于 with 方法会产生神奇的作用域，所以我们也是禁止使用该方法的")]),a._v(" "),s("h4",{attrs:{id:"for-in-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in-循环"}},[a._v("#")]),a._v(" for-in 循环")]),a._v(" "),s("p",[a._v("推荐使用for in语法，但是在对对象进行操作时，容易忘了检测 hasOwnProperty(key)，所以我们启用了 ESLint 的 guard-for-in 选项")]),a._v(" "),s("p",[a._v("对数组进行 for in的时候，顺序是不固定的。对数组我们采用for of")]),a._v(" "),s("h4",{attrs:{id:"修改内置对象的原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改内置对象的原型"}},[a._v("#")]),a._v(" 修改内置对象的原型")]),a._v(" "),s("p",[a._v("不要修改内置对象，如 Object 和 Array")]),a._v(" "),s("h2",{attrs:{id:"代码规范-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码规范-3"}},[a._v("#")]),a._v(" 代码规范")]),a._v(" "),s("h3",{attrs:{id:"编码规范-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码规范-2"}},[a._v("#")]),a._v(" 编码规范")]),a._v(" "),s("p",[a._v("本章是传统意义上的Style Guideline，目的是统一一些相对主观化的代码风格。")]),a._v(" "),s("h4",{attrs:{id:"单行代码块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行代码块"}},[a._v("#")]),a._v(" 单行代码块")]),a._v(" "),s("p",[a._v("在单行代码块中使用空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function foo () {return true}\nif (foo) {bar = 0}\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function foo () { return true }\nif (foo) { bar = 0 }\n")])])]),s("h4",{attrs:{id:"大括号风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大括号风格"}},[a._v("#")]),a._v(" 大括号风格")]),a._v(" "),s("p",[a._v("在编程过程中，大括号风格与缩进风格紧密联系，用来描述大括号相对代码块位置的方法有很多。在 JavaScript 中，主要有三种风格，如下：")]),a._v(" "),s("ul",[s("li",[a._v("One True Brace Style")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("if (foo) {\n  bar()\n} else {\n  baz()\n}\n")])])]),s("ul",[s("li",[a._v("Stroustrup")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("if (foo) {\n  bar()\n}\nelse {\n  baz()\n}\n")])])]),s("ul",[s("li",[a._v("Allman")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("if (foo)\n{\n  bar()\n}\nelse\n{\n  baz()\n}\n")])])]),s("p",[a._v("我们团队约定使用 One True Brace Style 风格")]),a._v(" "),s("h4",{attrs:{id:"变量命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量命名"}},[a._v("#")]),a._v(" 变量命名")]),a._v(" "),s("p",[a._v("当命名变量时，主流分为驼峰式命名（variableName）和下划线命名（variable_name）两大阵营。")]),a._v(" "),s("p",[a._v("团队约定使用驼峰式命名")]),a._v(" "),s("h4",{attrs:{id:"拖尾逗号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拖尾逗号"}},[a._v("#")]),a._v(" 拖尾逗号")]),a._v(" "),s("p",[a._v("在 ECMAScript5里面，对象字面量中的拖尾逗号是合法的，但在IE8（非IE8文档模式）下，当出现拖尾逗号，则会抛出错误。")]),a._v(" "),s("p",[a._v("拖尾逗号的例子：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var foo = {\n  name: 'foo',\n  age: '22',\n}\n")])])]),s("p",[a._v("拖尾逗号的好处是，简化了对象和数组添加或删除元素，我们只需要修改新增的行即可，并不会增加差异化的代码行数。")]),a._v(" "),s("p",[a._v("因为拖尾逗号有好也有不好，所以团队约定允许在最后一个元素或属性与闭括号 ] 或 } 在不同行时，可以（但不要求）使用拖尾逗号。")]),a._v(" "),s("p",[a._v("当在同一行时，禁止使用拖尾逗号。")]),a._v(" "),s("h4",{attrs:{id:"逗号空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逗号空格"}},[a._v("#")]),a._v(" 逗号空格")]),a._v(" "),s("p",[a._v("逗号前后的空格可以提高代码的可读性，团队约定在逗号后面使用空格，逗号前面不加空格。")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var foo = 1,bar = 2\nvar foo = 1 , bar = 2\nvar foo = 1 ,bar = 2\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var foo = 1, bar = 2\n")])])]),s("h4",{attrs:{id:"逗号风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逗号风格"}},[a._v("#")]),a._v(" 逗号风格")]),a._v(" "),s("p",[a._v("逗号分隔列表时，在 JavaScript 中主要有两种逗号风格：标准风格，逗号放置在当前行的末尾逗号前置风格，逗号放置在下一行的开始位置")]),a._v(" "),s("p",[a._v("团队约定使用标准风格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var foo = 1\n,\nbar = 2\n\nvar foo = 1\n, bar = 2\n\nvar foo = ['name'\n          , 'age']\n          \n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var foo = 1,\n    bar = 2\n\nvar foo = ['name',\n            'age']\n")])])]),s("h4",{attrs:{id:"计算属性的空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性的空格"}},[a._v("#")]),a._v(" 计算属性的空格")]),a._v(" "),s("p",[a._v("团队约定在对象的计算属性内，禁止使用空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("obj['foo' ]\nobj[ 'foo']\nobj[ 'foo' ]\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("obj['foo']\n")])])]),s("h4",{attrs:{id:"拖尾换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拖尾换行"}},[a._v("#")]),a._v(" 拖尾换行")]),a._v(" "),s("p",[a._v("在非空文件中，存在拖尾换行是一个常见的 UNIX 风格，它的好处是可以方便在串联和追加文件时不会打断 Shell 的提示。")]),a._v(" "),s("p",[a._v("在日常的项目中，保留拖尾换行的好处是，可以减少版本控制时的代码冲突。")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function func () {\n  // do something\n}\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function func () {\n  // do something\n}\n  // 此处是新的一行\n")])])]),s("p",[a._v("可以通过 .editorconfig 添加 EOL")]),a._v(" "),s("h4",{attrs:{id:"函数调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数调用"}},[a._v("#")]),a._v(" 函数调用")]),a._v(" "),s("p",[a._v("为了避免语法错误，团队约定在函数调用时，禁止使用空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fn ()\nfn\n()\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fn()\n")])])]),s("h4",{attrs:{id:"缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缩进"}},[a._v("#")]),a._v(" 缩进")]),a._v(" "),s("p",[a._v("代码保持一致的缩进，是作为工程师的职业素养。但缩进用两个空格，还是四个空格，是用 Tab还是空格呢？这样的争论太多了，也得不出答案。")]),a._v(" "),s("p",[a._v("本规范结合了市面上优秀的开源项目，姑且约定使用空格来缩进，而且缩进使用两个空格。")]),a._v(" "),s("p",[a._v("那是不是不能使用Tab进行缩进了？我们可以通过配置 .editorconfig ，将 Tab 自动转换为空格。")]),a._v(" "),s("h4",{attrs:{id:"对象字面量的键值缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象字面量的键值缩进"}},[a._v("#")]),a._v(" 对象字面量的键值缩进")]),a._v(" "),s("p",[a._v("团队约定对象字面量的键和值之间不能存在空格，且要求对象字面量的冒号和值之间存在一个空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var obj = { 'foo' : 'haha' }\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var obj = { 'foo': 'haha' }\n")])])]),s("h4",{attrs:{id:"构造函数首字母大写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数首字母大写"}},[a._v("#")]),a._v(" 构造函数首字母大写")]),a._v(" "),s("p",[a._v("在 JavaScript中new操作符用来创建某个特定类型的对象的一个实例，该类型的对象是由一个构造函数表示的。")]),a._v(" "),s("p",[a._v("由于构造函数只是常规函数，唯一区别是使用new来调用。")]),a._v(" "),s("p",[a._v("所以我们团队约定构造函数的首字母要大小，以此来区分构造函数和普通函数。")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var fooItem = new foo()\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var fooItem = new Foo()\n")])])]),s("h4",{attrs:{id:"构造函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数的参数"}},[a._v("#")]),a._v(" 构造函数的参数")]),a._v(" "),s("p",[a._v("在 JavaScript中，通过new调用构造函数时，如果不带参数，可以省略后面的圆括号。但这样会造成与整体的代码风格不一致，所以团队约定使用圆括号。")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var person = new Person\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var person = new Person()\n")])])]),s("h4",{attrs:{id:"链式调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式调用"}},[a._v("#")]),a._v(" 链式调用")]),a._v(" "),s("p",[a._v("链式调用如果放在同一行，往往会造成代码的可读性差，但有些时候，短的链式调用并不会影响美观。")]),a._v(" "),s("p",[a._v("所以本规范约定一行最多只能有四个链式调用，超过就要求换行。")]),a._v(" "),s("h4",{attrs:{id:"空行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空行"}},[a._v("#")]),a._v(" 空行")]),a._v(" "),s("p",[a._v("空白行对于分离代码逻辑有帮助，但过多的空行会占据屏幕的空间，影响可读性。")]),a._v(" "),s("p",[a._v("团队约定最大连续空行数为 2")]),a._v(" "),s("h4",{attrs:{id:"链式赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式赋值"}},[a._v("#")]),a._v(" 链式赋值")]),a._v(" "),s("p",[a._v("链式赋值容易造成代码的可读性差，所以团队约定禁止使用链式赋值")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var a = b = c = 1\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var a = 1\nvar b = 1\nvar c = 1\n")])])]),s("h4",{attrs:{id:"变量声明-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明-2"}},[a._v("#")]),a._v(" 变量声明")]),a._v(" "),s("p",[a._v("JavaScript允许在一个声明中，声明多个变量。团队约定在声明变量时，一个声明只能有一个变量")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var a, b, c\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var a\nvar b\nvar c\n")])])]),s("h4",{attrs:{id:"分号-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分号-2"}},[a._v("#")]),a._v(" 分号")]),a._v(" "),s("p",[a._v("JavaScript在所有类C语言中是比较独特的，它不需要在每个语句的末尾有分号。")]),a._v(" "),s("p",[a._v("在很多情况下，JavaScript引擎可以确定一个分号应该在什么位置然后自动添加它。此特征被称为自动分号插入(ASI)，被认为是 JavaScript 中较为有争议的特征。")]),a._v(" "),s("p",[a._v("团队中对于是否应该使用分号，也有许多争论，本规范推荐不使用分号，因为我们认为好的工程师应该知道什么时候该加，什么时候不该加。")]),a._v(" "),s("h4",{attrs:{id:"代码块空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码块空格"}},[a._v("#")]),a._v(" 代码块空格")]),a._v(" "),s("p",[a._v("一致性是任何风格指南的重要组成部分。虽然在哪里放置块的开括号纯属个人偏好，但在整个项目中应该保持一致。")]),a._v(" "),s("p",[a._v("不一致的风格将会分散读者阅读代码的注意力。")]),a._v(" "),s("p",[a._v("团队约定代码块前要添加空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("if (a){\n  b()\n}\n\nfunction a (){}\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("if (a) {\n  b()\n}\n\nfunction a () {}\n")])])]),s("h4",{attrs:{id:"函数声明的空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明的空格"}},[a._v("#")]),a._v(" 函数声明的空格")]),a._v(" "),s("p",[a._v("当格式化一个函数，函数名或 function 关键字与左括号之间允许有空白。")]),a._v(" "),s("p",[a._v("命名函数要求函数名和function关键字之间有空格，但是匿名函数要求不加空格。")]),a._v(" "),s("p",[a._v("团队约定函数括号前要加空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function func(x) {\n  // ...\n}\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function func (x) {\n  // ...\n}\n")])])]),s("h4",{attrs:{id:"操作符的空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作符的空格"}},[a._v("#")]),a._v(" 操作符的空格")]),a._v(" "),s("p",[a._v("团队约定操作符前后都需要添加空格")]),a._v(" "),s("p",[a._v("不推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var sum = 1+2\n")])])]),s("p",[a._v("推荐")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var sum = 1 + 2\n")])])]),s("h4",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[a._v("#")]),a._v(" BOM")]),a._v(" "),s("p",[a._v("Unicode 字节顺序标记 (BOM) 用来指定代码单元是高字节序还是低字节序。也就是说，是高位在前还是低位在前。")]),a._v(" "),s("p",[a._v("UTF-8 不需要BOM来表明字节顺序，因为单个字节并不影响字节顺序。")]),a._v(" "),s("p",[a._v("相信不少同学遇到过BOM的坑，这里不多说了，切记不要使用windows的记事本改代码！")]),a._v(" "),s("p",[a._v("本文整理自凹凸实验室，更多详细内容请移步官方文档")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://guide.aotu.io/docs/index.html"}},[a._v("凹凸实验室")])])])}],!1,null,null,null);t.default=n.exports}}]);